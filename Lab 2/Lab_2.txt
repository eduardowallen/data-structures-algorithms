Test instructions:The tests for Exercise 4 are executed in the following order:	Insertion sort test		The array in its original state is printed		The array after the algorithm has sorted it is printed	RESET LISTS	Merge sort test		The array in its original state is printed		The array after the algorithm has sorted is printedAnswers to Exercise 3:Second and third case: If all elements are the same or if the array is sorted in ascending order, Insertion Sort works best. As no numbers are larger or smaller or the array is already sorted in "correct" order (ascending) there will be no switches.The algoritm will take O(n) time to execute in both cases.First and fourth case: If the data size is small to medium, space is an issue and we don't care about stability issues we will choose Quick Sort.However, if the data size is large, space is not an issue and we want stability we will use Merge Sort.The time complexity is almost the same: O(n log n) in average and best case, however they differ in worst case time where Merge Sort is still O(n log n) and Quick Sort O(n^2). That's why we've choosen to go with Merge Sort, as it's more stable and we have not recieved any detailed information about the cases.